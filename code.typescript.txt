import React from "react";
import { motion } from "framer-motion";

const RomanticAnimation = () => {
  // Floating hearts animation variant
  const floatingHeart = {
    initial: { y: 0, opacity: 0 },
    animate: {
      y: [-20, -50, -20],
      opacity: [0, 1, 0],
      transition: {
        duration: 4,
        repeat: Infinity,
        ease: "easeInOut",
      },
    },
  };

  // Pulsing heart animation for main heart
  const pulseHeart = {
    animate: {
      scale: [1, 1.2, 1],
      rotate: [0, 10, -10, 0],
      transition: {
        duration: 3,
        repeat: Infinity,
        ease: "easeInOut",
      },
    },
  };

  // Text fade in animation
  const textFadeIn = {
    initial: { opacity: 0, y: 20 },
    animate: {
      opacity: 1,
      y: 0,
      transition: { duration: 1.5, ease: "easeOut" },
    },
  };

  // Generate multiple floating hearts with random positions and delays
  const hearts = Array.from({ length: 20 }, (_, i) => ({
    id: i,
    left: `${Math.random() * 90 + 5}%`,
    delay: Math.random() * 3,
    size: Math.random() * 18 + 12,
    topStart: 100 + Math.random() * 50,
  }));

  return (
    <div
      className="relative min-h-screen flex items-center justify-center p-6 overflow-hidden"
      style={{
        background:
          "radial-gradient(circle at center, #fce4ec 0%, #f8bbd0 70%, #f48fb1 100%)",
      }}
    >
      {/* Background pink flowers pattern */}
      <div className="absolute inset-0 pointer-events-none overflow-hidden">
        {/* Repeated flower SVGs scattered */}
        {[...Array(12)].map((_, i) => {
          const size = 40 + Math.random() * 40;
          const top = Math.random() * 100;
          const left = Math.random() * 100;
          const rotate = Math.random() * 360;
          const opacity = 0.1 + Math.random() * 0.15;
          return (
            <svg
              key={i}
              viewBox="0 0 64 64"
              fill="none"
              stroke="#f48fb1"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              className="absolute"
              style={{
                width: size,
                height: size,
                top: `${top}%`,
                left: `${left}%`,
                transform: `rotate(${rotate}deg)`,
                opacity,
                filter: "drop-shadow(0 0 2px #f48fb1)",
              }}
            >
              <circle cx="32" cy="32" r="6" fill="#f48fb1" />
              <path d="M32 2 L32 18" />
              <path d="M32 46 L32 62" />
              <path d="M2 32 L18 32" />
              <path d="M46 32 L62 32" />
              <path d="M12 12 L22 22" />
              <path d="M42 42 L52 52" />
              <path d="M12 52 L22 42" />
              <path d="M42 22 L52 12" />
            </svg>
          );
        })}
      </div>

      {/* Floating hearts */}
      {hearts.map(({ id, left, delay, size, topStart }) => (
        <motion.div
          key={id}
          className="absolute text-pink-400"
          style={{
            left,
            top: topStart,
            width: size,
            height: size,
            pointerEvents: "none",
          }}
          variants={floatingHeart}
          initial="initial"
          animate="animate"
          transition={{
            delay,
            duration: 4 + Math.random() * 2,
            repeat: Infinity,
            ease: "easeInOut",
          }}
        >
          <svg
            viewBox="0 0 24 24"
            fill="currentColor"
            className="w-full h-full"
            aria-hidden="true"
          >
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
          </svg>
        </motion.div>
      ))}

      {/* Main content container */}
      <motion.div
        className="relative z-10 bg-white/90 backdrop-blur-md rounded-3xl p-10 max-w-lg w-full shadow-lg border border-pink-300 text-center"
        initial="initial"
        animate="animate"
        variants={textFadeIn}
      >
        {/* Pulsing heart icon */}
        <motion.div {...pulseHeart} className="mx-auto mb-6 text-pink-500 w-20 h-20">
          <svg
            viewBox="0 0 24 24"
            fill="currentColor"
            aria-hidden="true"
            className="w-full h-full"
          >
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
          </svg>
        </motion.div>

        {/* Main message */}
        <h1 className="text-4xl font-serif font-semibold text-pink-700 mb-4 select-none">
          I Loved You, Saffha Mantan Imoet Aku &lt;&gt;
        </h1>

        <p className="text-pink-600 text-lg font-light leading-relaxed select-none">
          Meski sudah menjadi mantan, <br />
          cintaku untukmu tetap indah dan tulus. <br />
          Semoga kau selalu bahagia, <br />
          seperti bunga yang mekar di musim semi.
        </p>

        {/* Small flower icons below text */}
        <div className="flex justify-center space-x-6 mt-8">
          {[...Array(5)].map((_, i) => (
            <svg
              key={i}
              viewBox="0 0 24 24"
              fill="none"
              stroke="#f48fb1"
              strokeWidth="2"
              strokeLinecap="round"
              strokeLinejoin="round"
              className="w-8 h-8"
              aria-hidden="true"
            >
              <circle cx="12" cy="12" r="3" fill="#f48fb1" />
              <path d="M12 2 L12 7" />
              <path d="M12 17 L12 22" />
              <path d="M2 12 L7 12" />
              <path d="M17 12 L22 12" />
              <path d="M5 5 L9 9" />
              <path d="M15 15 L19 19" />
              <path d="M5 19 L9 15" />
              <path d="M15 9 L19 5" />
            </svg>
          ))}
        </div>
      </motion.div>
    </div>
  );
};

export default RomanticAnimation;
